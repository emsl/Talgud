<% semantic_fields_for @event do |f| %>
  <% f.inputs do %>
    <%= f.input :name %>
    <%= f.input :event_type, :include_blank => false %>
    <%= f.input :location_address_county, :collection => County.sorted.all %>
    <%= f.input :location_address_municipality, :collection => @event.location_address_county.try(:municipalities), :wrapper_html => {:style => unless @event.location_address_county then 'display: none;' end } %>
    <%= f.input :location_address_settlement, :collection => @event.location_address_municipality.try(:settlements), :wrapper_html => {:style => unless @event.location_address_municipality then 'display: none;' end } %>
    <li id="map_row" style="display: none">
      <label><%= t('.map_location_hint')%></label>
      <div id="map" style="height: 400px;"></div>
    </li>
    <%= f.input :latitude, :as => :hidden %>
    <%= f.input :longitude, :as => :hidden %>
    <%= f.input :location_address_street, :input_html => {:rows => 2} %>
    <%= f.input :meta_aim_description, :input_html => {:rows => 4} %>
    <%= f.input :meta_job_description, :input_html => {:rows => 4} %>
    <%= f.input :max_participants %>
    <%= f.input :registration_begins_at %>
    <%= f.input :registration_ends_at %>
    <%= f.input :begins_at %>
    <%= f.input :ends_at %>
    <%= f.input :meta_bring_with_you, :input_html => {:rows => 4} %>
    <%= f.input :meta_provided_for_participiants, :input_html => {:rows => 4} %>
    <%= f.input :meta_subject_info, :input_html => {:rows => 4} %>
    <%= f.input :meta_food_info, :input_html => {:rows => 4} %>
    <%= f.input :meta_sleep_info, :input_html => {:rows => 4} %>
    <%= f.input :meta_transport_info, :input_html => {:rows => 4} %>
    <%= f.input :meta_cash_info, :input_html => {:rows => 4} %>
    <%= f.input :languages, :as => :check_boxes, :collection => select_options_for_language %>
    <%= f.input :gathering_location, :input_html => {:rows => 4} %>
    <%= f.input :notes, :input_html => {:rows => 4} %>
    <%= f.input :photogallery_url, :as => :string %>
  <% end %>

  <div class="form-extra round">
    <h3><%= t('events.form.registration') %></h3>
    
    <% f.inputs do %>
      <%= f.input :registration_text, :input_html => {:rows => 4} %>
      <%= f.input :registration_notes_title, :input_html => {:rows => 4} %>
    <% end %>
  </div>
  
  <div class="form-extra round" style="margin-top:10px;">
    <h3><%= t('.additional_questions') %></h3>
    
    <% f.inputs do %>
      <%= f.input :meta_subject_owner %>
      <%= f.input :meta_subject_protegee %>
      <%= f.input :meta_subject_heritage_number %>
    <% end %>
  </div>
  
  <% if @event.new_record? %>
  <div class="form-extra round" style="margin-top:10px;">
    <h3><%= t('.event_publishing') %></h3>
    
    <% f.inputs do %>
      <%= f.input :instant_publish, :as => :boolean, :required => false %>    
    <% end %>
    <p><%= t('formtastic.hints.event.instant_publish') %></p>
  </div>  
  <% elsif @event.status == Event::STATUS[:new] %>
  <div class="form-extra round" style="margin-top:10px;">
    <h3><%= t('.event_publishing') %></h3>
    
    <% f.inputs do %>
      <%= f.input :publish, :as => :boolean, :required => false %>    
    <% end %>
    <p><%= t('formtastic.hints.event.publish') %></p>
  </div>  
  <% end %>
<% end %>

<script type="text/javascript" charset="utf-8">
  jQuery(document).ready(function() {
      var countySelect = $('#event_location_address_county_id'),
          municipalitySelect = $('#event_location_address_municipality_id'),
          settlementSelect = $('#event_location_address_settlement_id');

      countySelect.change(function() {
          var countySelect = $(this);

          showMap();

          $.ajax({
              type: 'GET', dataType: 'json',
              url: '<%= municipalities_addresses_path %>?county_id=' + countySelect.val(),
              beforeSend: function(request) {
                  municipalitySelect.empty();
                  municipalitySelect.parent('li').show();
                  municipalitySelect.attr('disabled', 'disabled');
                  municipalitySelect.append($('<option></option>').text('<%= t('common.loading') %>'));
              },
              success: function(data) {
                  municipalitySelect.empty();
                  settlementSelect.empty();
                  
                  municipalitySelect.empty();
                  municipalitySelect.parent('li').show();
                  municipalitySelect.removeAttr('disabled');
                  municipalitySelect.append($('<option></option>'));

                  jQuery.each(data, function(i, m) {
                      municipalitySelect.append($('<option></option>').attr('value', m.id).text(m.name));
                  });
              }
          });
      });

      municipalitySelect.change(function() {
          codeAddress(municipalitySelect.find(':selected').text() + ', ' + countySelect.find(':selected').text());

          showMap();

          $.ajax({
              type: 'GET', dataType: 'json',
              url: '<%= settlements_addresses_path %>?municipality_id=' + municipalitySelect.val(),
              beforeSend: function(request) {
                  settlementSelect.empty();
                  settlementSelect.parent('li').show();
                  settlementSelect.attr('disabled', 'disabled');
                  settlementSelect.append($('<option></option>').text('<%= t('common.loading') %>'));
              },
              success: function(data) {
                  settlementSelect.empty();
                  settlementSelect.removeAttr('disabled');
                  settlementSelect.append($('<option></option>'));

                  if (data.length > 0) {
                      settlementSelect.parent('li').show();
                  } else {
                      settlementSelect.parent('li').hide();
                  }

                  jQuery.each(data, function(i, m) {
                      settlementSelect.append($('<option></option>').attr('value', m.id).text(m.name));
                  });
              }
          });
      });

      settlementSelect.change(function() {
          showMap();
          codeAddress(settlementSelect.find(':selected').text() + ', ' + municipalitySelect.find(':selected').text() + ', ' + countySelect.find(':selected').text());
      })
  });

  jQuery(document).ready(initFormHints);
</script>

<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>
<script type="text/javascript" charset="utf-8">

  var center = new google.maps.LatLng(58.564, 25.729);
  var map, marker, geocoder, maploaded = false;

  function showMap(latitude, longitude) {
      if (maploaded) {
          return false;
      }
      
      $('#map_row').show();
    
      map = new google.maps.Map(document.getElementById('map'), {
          zoom: 7, scrollwheel: false, center: center, mapTypeId: google.maps.MapTypeId.HYBRID
      });
      
      geocoder = new google.maps.Geocoder();
      
      marker = new google.maps.Marker({position: center, map: map, draggable: true});

      google.maps.event.addListener(marker, 'drag', function() {
          $('#event_latitude').val(marker.position.lat());
          $('#event_longitude').val(marker.position.lng());
      });
      
      // Try to determine user location unless it is already known.
      if (latitude && longitude) {
          center = new google.maps.LatLng(latitude, longitude);
          centerMap(center);
      } else {
          locateUser();
      }
      
      maploaded = true;
  }
  
  function locateUser() {
      if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
              centerMap(new google.maps.LatLng(position.coords.latitude, position.coords.longitude), 10);
          }, function() {});
      } else if (google.gears) {
          var geo = google.gears.factory.create('beta.geolocation');
          geo.getCurrentPosition(function(position) {
              centerMap(new google.maps.LatLng(position.latitude, position.longitude), 10);
          }, function() {});
      }
  }
  
  function centerMap(latlng, zoom) {
      if (map && marker) {
          map.setCenter(latlng);
          marker.setPosition(latlng);
          
          if (zoom) {
              map.setZoom(zoom);
          }
          
          // Update form fields
          $('#event_latitude').val(latlng.lat());
          $('#event_longitude').val(latlng.lng());
      }
  }
  
  function codeAddress(address) {
      if (geocoder) {
          geocoder.geocode({'address': address}, function(results, status) {
              if (status == google.maps.GeocoderStatus.OK) {
                  centerMap(results[0].geometry.location, 12);
              }
          });
      }
  }
  
  <% unless @event.latitude.blank? and @event.longitude.blank? %>
  jQuery(document).ready(function() {
    showMap($('#event_latitude').val(), $('#event_longitude').val());
  });
  <% end %>
</script>